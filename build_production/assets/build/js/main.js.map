{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/animateplus/animateplus.js","webpack:///./source/_assets/js/main.js","webpack:///./node_modules/prismjs/components/prism-markup-templating.js","webpack:///./node_modules/prismjs/components/prism-markup.js","webpack:///./node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js","webpack:///./node_modules/prismjs/components/prism-php.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","first","item","computeValue","index","getElements","elements","Array","isArray","nodeType","from","document","querySelectorAll","accelerate","style","keyframes","willChange","map","join","createSVG","element","attributes","entries","reduce","node","attribute","setAttribute","createElementNS","blurs","axes","count","[object Object]","blur","id","this","svg","filter","axis","offset","color-interpolation-filters","gaussian","in","append","body","prepend","setDeviation","easing","curve","values","progress","out","deviation","startsWith","Math","max","getDeviation","rgba","hex","color","slice","g","b","a","split","pairs","length","string","array","push","hexPairs","parseInt","convert","pi2","PI","getOffset","strength","period","asin","easings","linear","in-cubic","in-quartic","in-quintic","in-exponential","in-circular","sqrt","in-elastic","amplitude","sin","out-cubic","out-quartic","out-quintic","out-exponential","out-circular","out-elastic","in-out-cubic","in-out-quartic","in-out-quintic","in-out-exponential","in-out-circular","in-out-elastic","decomposeEasing","trim","extractRegExp","extractNumbers","match","Number","addPropertyKeyframes","animatable","String","sanitize","strings","extractStrings","numbers","round","createStyles","styles","to","previous","getCurrentValue","recomposeValue","reverseKeyframes","forEach","reverse","rAF","all","Set","add","size","requestAnimationFrame","tick","paused","setSpeed","speed","addAnimations","options","resolve","duration","delay","timeout","loop","optimize","direction","change","rest","last","totalDuration","async","createAnimationKeyframes","animation","animationTimeout","defaults","assign","normalizeBlur","end","now","timing","startTime","elapsed","trackTime","min","getProgress","resetTime","delete","parentNode","remove","clearBlur","ease","addEventListener","performance","hidden","time","clear","Promise","window","animate","Prism","highlightAll","getPlaceholder","language","toUpperCase","defineProperties","languages","buildPlaceholders","env","placeholderPattern","replaceFilter","tokenStack","code","replace","placeholder","indexOf","grammar","markup","tokenizePlaceholders","j","keys","walkTokens","tokens","token","content","k","before","substring","middle","Token","tokenize","after","replacement","apply","splice","concat","comment","prolog","doctype","cdata","tag","pattern","greedy","inside","punctuation","namespace","attr-value","lookbehind","attr-name","entity","hooks","type","tagName","lang","includedCdataInside","included-cdata","def","RegExp","source","insertBefore","xml","extend","html","mathml","self","querySelector","res","isLineHeightRounded","createElement","fontSize","lineHeight","padding","border","innerHTML","appendChild","offsetHeight","removeChild","fakeTimer","pre","lines","getAttribute","test","nodeName","num","$$","line","textContent","completeHook","clearTimeout","hasLineNumbers","plugins","lineNumbers","isLineNumbersLoaded","hasClass","highlightLines","setTimeout","applyHash","preElements","expr","con","className","classes","currentRange","ranges","parseFloat","getComputedStyle","range","start","startNode","getLine","endNode","top","offsetTop","height","hash","location","getElementById","lastIndexOf","hasAttribute","scrollIntoView","php","keyword","boolean","alias","constant","shell-comment","delimiter","variable","package","string_interpolation","nowdoc-string","heredoc-string","interpolation","single-quoted-string","double-quoted-string","_self","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","toString","objId","obj","clone","deepClone","visited","v","redef","insert","root","ret","newToken","old","DFS","callback","propertyType","highlightAllUnder","container","selector","run","highlightElement","parent","toLowerCase","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","matchGrammar","strarr","startPos","oneshot","target","patterns","lookbehindLength","global","flags","pos","str","lastIndex","exec","len","delNum","args","wrapped","callbacks","matchedStr","aliases","message","parse","close","script","currentScript","getElementsByTagName","pop","src","readyState","WorkerGlobalScope","css","atrule","rule","url","important","function","addInlined","style-attr","clike","class-name","number","operator","javascript","regex","function-variable","parameter","template-string","interpolation-punctuation","js","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","extension","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","toolbar","registerButton","href","Function","e"],"mappings":"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","file":"/js/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Animate Plus v2.1.1\n * Copyright (c) 2017-2018 Benjamin De Cock\n * http://animateplus.com/license\n */\n\n\n// logic\n// =====\n\nconst first = ([item]) => item;\n\nconst computeValue = (value, index) =>\n  typeof value == \"function\" ? value(index) : value;\n\n\n// dom\n// ===\n\nconst getElements = elements => {\n  if (Array.isArray(elements))\n    return elements;\n  if (!elements || elements.nodeType)\n    return [elements];\n  return Array.from(typeof elements == \"string\" ? document.querySelectorAll(elements) : elements);\n};\n\nconst accelerate = ({style}, keyframes) =>\n  style.willChange = keyframes\n    ? keyframes.map(({property}) => property).join()\n    : \"auto\";\n\nconst createSVG = (element, attributes) =>\n  Object.entries(attributes).reduce((node, [attribute, value]) => {\n    node.setAttribute(attribute, value);\n    return node;\n  }, document.createElementNS(\"http://www.w3.org/2000/svg\", element));\n\n\n// motion blur\n// ===========\n\nconst blurs = {\n  axes: [\"x\", \"y\"],\n  count: 0,\n  add({element, blur}) {\n    const id = `motion-blur-${this.count++}`;\n    const svg = createSVG(\"svg\", {\n      style: \"position: absolute; width: 0; height: 0\"\n    });\n    const filter = createSVG(\"filter\", this.axes.reduce((attributes, axis) => {\n      const offset = blur[axis] * 2;\n      attributes[axis] = `-${offset}%`;\n      attributes[axis == \"x\" ? \"width\" : \"height\"] = `${100 + offset * 2}%`;\n      return attributes;\n    },{\n      id,\n      \"color-interpolation-filters\": \"sRGB\"\n    }));\n    const gaussian = createSVG(\"feGaussianBlur\", {\n      in: \"SourceGraphic\"\n    });\n    filter.append(gaussian);\n    svg.append(filter);\n    element.style.filter = `url(\"#${id}\")`;\n    document.body.prepend(svg);\n    return gaussian;\n  }\n};\n\nconst getDeviation = (blur, {easing}, curve) => {\n  const progress = blur * curve;\n  const out = blur - progress;\n  const deviation = (() => {\n    if (easing == \"linear\")\n      return blur;\n    if (easing.startsWith(\"in-out\"))\n      return (curve < .5 ? progress : out) * 2;\n    if (easing.startsWith(\"in\"))\n      return progress;\n    return out;\n  })();\n  return Math.max(0, deviation);\n};\n\nconst setDeviation = ({blur, gaussian, easing}, curve) => {\n  const values = blurs.axes.map(axis => getDeviation(blur[axis], easing, curve));\n  gaussian.setAttribute(\"stdDeviation\", values.join());\n};\n\nconst normalizeBlur = blur => {\n  const defaults = blurs.axes.reduce((object, axis) => {\n    object[axis] = 0;\n    return object;\n  }, {});\n  return Object.assign(defaults, blur);\n};\n\nconst clearBlur = ({style}, {parentNode: {parentNode: svg}}) => {\n  style.filter = \"none\";\n  svg.remove();\n};\n\n\n// color conversion\n// ================\n\nconst hexPairs = color => {\n  const split = color.split(\"\");\n  const pairs = color.length < 5\n    ? split.map(string => string + string)\n    : split.reduce((array, string, index) => {\n      if (index % 2)\n        array.push(split[index - 1] + string);\n      return array;\n    }, []);\n  if (pairs.length < 4)\n    pairs.push(\"ff\");\n  return pairs;\n};\n\nconst convert = color =>\n  hexPairs(color).map(string => parseInt(string, 16));\n\nconst rgba = hex => {\n  const color = hex.slice(1);\n  const [r, g, b, a] = convert(color);\n  return `rgba(${r}, ${g}, ${b}, ${a / 255})`;\n};\n\n\n// easing equations\n// ================\n\nconst pi2 = Math.PI * 2;\n\nconst getOffset = (strength, period) =>\n  period / pi2 * Math.asin(1 / strength);\n\nconst easings = {\n  \"linear\": progress => progress,\n\n  \"in-cubic\": progress => progress ** 3,\n  \"in-quartic\": progress => progress ** 4,\n  \"in-quintic\": progress => progress ** 5,\n  \"in-exponential\": progress => 1024 ** (progress - 1),\n  \"in-circular\": progress => 1 - Math.sqrt(1 - progress ** 2),\n  \"in-elastic\": (progress, amplitude, period) => {\n    const strength = Math.max(amplitude, 1);\n    const offset = getOffset(strength, period);\n    return -(strength * 2 ** (10 * (progress -= 1)) * Math.sin((progress - offset) * pi2 / period));\n  },\n\n  \"out-cubic\": progress => --progress ** 3 + 1,\n  \"out-quartic\": progress => 1 - --progress ** 4,\n  \"out-quintic\": progress => --progress ** 5 + 1,\n  \"out-exponential\": progress => 1 - 2 ** (-10 * progress),\n  \"out-circular\": progress => Math.sqrt(1 - --progress ** 2),\n  \"out-elastic\": (progress, amplitude, period) => {\n    const strength = Math.max(amplitude, 1);\n    const offset = getOffset(strength, period);\n    return strength * 2 ** (-10 * progress) * Math.sin((progress - offset) * pi2 / period) + 1;\n  },\n\n  \"in-out-cubic\": progress =>\n    (progress *= 2) < 1\n      ? .5 * progress ** 3\n      : .5 * ((progress -= 2) * progress ** 2 + 2),\n  \"in-out-quartic\": progress =>\n    (progress *= 2) < 1\n      ? .5 * progress ** 4\n      : -.5 * ((progress -= 2) * progress ** 3 - 2),\n  \"in-out-quintic\": progress =>\n    (progress *= 2) < 1\n      ? .5 * progress ** 5\n      : .5 * ((progress -= 2) * progress ** 4 + 2),\n  \"in-out-exponential\": progress =>\n    (progress *= 2) < 1\n      ? .5 * 1024 ** (progress - 1)\n      : .5 * (-(2 ** (-10 * (progress - 1))) + 2),\n  \"in-out-circular\": progress =>\n    (progress *= 2) < 1\n      ? -.5 * (Math.sqrt(1 - progress ** 2) - 1)\n      : .5 * (Math.sqrt(1 - (progress -= 2) * progress) + 1),\n  \"in-out-elastic\": (progress, amplitude, period) => {\n    const strength = Math.max(amplitude, 1);\n    const offset = getOffset(strength, period);\n    return (progress *= 2) < 1\n      ? -.5 * (strength * 2 ** (10 * (progress -= 1)) * Math.sin((progress - offset) * pi2 / period))\n      : strength * 2 ** (-10 * (progress -= 1)) * Math.sin((progress - offset) * pi2 / period) * .5 + 1;\n  }\n};\n\nconst decomposeEasing = string => {\n  const [easing, amplitude = 1, period = .4] = string.trim().split(\" \");\n  return {easing, amplitude, period};\n};\n\nconst ease = ({easing, amplitude, period}, progress) =>\n  easings[easing](progress, amplitude, period);\n\n\n// keyframes composition\n// =====================\n\nconst extractRegExp = /-?\\d*\\.?\\d+/g;\n\nconst extractStrings = value =>\n  value.split(extractRegExp);\n\nconst extractNumbers = value =>\n  value.match(extractRegExp).map(Number);\n\nconst sanitize = values =>\n  values.map(value => {\n    const string = String(value);\n    return string.startsWith(\"#\") ? rgba(string) : string;\n  });\n\nconst addPropertyKeyframes = (property, values) => {\n  const animatable = sanitize(values);\n  const strings = extractStrings(first(animatable));\n  const numbers = animatable.map(extractNumbers);\n  const round = first(strings).startsWith(\"rgb\");\n  return {property, strings, numbers, round};\n};\n\nconst createAnimationKeyframes = (keyframes, index) =>\n  Object.entries(keyframes).map(([property, values]) =>\n    addPropertyKeyframes(property, computeValue(values, index)));\n\nconst getCurrentValue = (from, to, easing) =>\n  from + (to - from) * easing;\n\nconst recomposeValue = ([from, to], strings, round, easing) =>\n  strings.reduce((style, string, index) => {\n    const previous = index - 1;\n    const value = getCurrentValue(from[previous], to[previous], easing);\n    return style + (round && index < 4 ? Math.round(value) : value) + string;\n  });\n\nconst createStyles = (keyframes, easing) =>\n  keyframes.reduce((styles, {property, numbers, strings, round}) => {\n    styles[property] = recomposeValue(numbers, strings, round, easing);\n    return styles;\n  }, {});\n\nconst reverseKeyframes = keyframes =>\n  keyframes.forEach(({numbers}) => numbers.reverse());\n\n\n// animation tracking\n// ==================\n\nconst rAF = {\n  all: new Set,\n  add(object) {\n    if (this.all.add(object).size < 2) requestAnimationFrame(tick);\n  }\n};\n\nconst paused = {};\n\nconst trackTime = (timing, now) => {\n  if (!timing.startTime) timing.startTime = now;\n  timing.elapsed = now - timing.startTime;\n};\n\nconst resetTime = object =>\n  object.startTime = 0;\n\nconst getProgress = ({elapsed, duration}) =>\n  duration > 0 ? Math.min(elapsed / duration, 1) : 1;\n\nconst setSpeed = (speed, value, index) =>\n  speed > 0 ? computeValue(value, index) / speed : 0;\n\nconst addAnimations = (options, resolve) => {\n  const {\n    elements = null,\n    easing = \"out-elastic\",\n    duration = 1000,\n    delay: timeout = 0,\n    speed = 1,\n    loop = false,\n    optimize = false,\n    direction = \"normal\",\n    blur = null,\n    change = null,\n    ...rest\n  } = options;\n\n  const last = {\n    totalDuration: -1\n  };\n\n  getElements(elements).forEach(async (element, index) => {\n    const keyframes = createAnimationKeyframes(rest, index);\n    const animation = {\n      element,\n      keyframes,\n      loop,\n      optimize,\n      direction,\n      change,\n      easing: decomposeEasing(easing),\n      duration: setSpeed(speed, duration, index)\n    };\n\n    const animationTimeout = setSpeed(speed, timeout, index);\n    const totalDuration = animationTimeout + animation.duration;\n\n    if (direction != \"normal\")\n      reverseKeyframes(keyframes);\n\n    if (element) {\n      if (optimize)\n        accelerate(element, keyframes);\n\n      if (blur) {\n        animation.blur = normalizeBlur(computeValue(blur, index));\n        animation.gaussian = blurs.add(animation);\n      }\n    }\n\n    if (totalDuration > last.totalDuration) {\n      last.animation = animation;\n      last.totalDuration = totalDuration;\n    }\n\n    if (animationTimeout) await delay(animationTimeout);\n    rAF.add(animation);\n  });\n\n  const {animation} = last;\n  if (!animation) return;\n  animation.end = resolve;\n  animation.options = options;\n};\n\nconst tick = now => {\n  const {all} = rAF;\n  all.forEach(object => {\n    trackTime(object, now);\n    const progress = getProgress(object);\n    const {\n      element,\n      keyframes,\n      loop,\n      optimize,\n      direction,\n      change,\n      easing,\n      duration,\n      gaussian,\n      end,\n      options\n    } = object;\n\n    // object is an animation\n    if (direction) {\n      let curve = progress;\n      switch (progress) {\n        case 0:\n          if (direction == \"alternate\") reverseKeyframes(keyframes);\n          break;\n        case 1:\n          if (loop)\n            resetTime(object);\n          else {\n            all.delete(object);\n            if (optimize && element) accelerate(element);\n            if (gaussian) clearBlur(element, gaussian);\n          }\n          if (end) end(options);\n          break;\n        default:\n          curve = ease(easing, progress);\n      }\n      if (gaussian) setDeviation(object, curve);\n      if (change && end) change(curve);\n      if (element) Object.assign(element.style, createStyles(keyframes, curve));\n      return;\n    }\n\n    // object is a delay\n    if (progress < 1) return;\n    all.delete(object);\n    end(duration);\n  });\n\n  if (all.size) requestAnimationFrame(tick);\n};\n\ndocument.addEventListener(\"visibilitychange\", () => {\n  const now = performance.now();\n\n  if (document.hidden) {\n    const {all} = rAF;\n    paused.time = now;\n    paused.all = new Set(all);\n    all.clear();\n    return;\n  }\n\n  const {all, time} = paused;\n  if (!all) return;\n  const elapsed = now - time;\n  requestAnimationFrame(() =>\n    all.forEach(object => {\n      object.startTime += elapsed;\n      rAF.add(object);\n    }));\n});\n\n\n// exports\n// =======\n\nexport default options =>\n  new Promise(resolve => addAnimations(options, resolve));\n\nexport const delay = duration =>\n  new Promise(resolve => rAF.add({\n    duration,\n    end: resolve\n  }));\n\nexport const stop = elements => {\n  const {all} = rAF;\n  const nodes = getElements(elements);\n  all.forEach(object => {\n    if (nodes.includes(object.element)) all.delete(object);\n  });\n  return nodes;\n};\n","// window.docsearch = require('docsearch.js');\n\nimport Prism from 'prismjs'\nimport animate from 'animateplus'\n\nwindow.animate = animate\n\n// Load languages.\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-markup-templating'\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-php'\nimport 'prismjs/plugins/line-highlight/prism-line-highlight.js'\n// import 'prismjs/plugins/line-highlight/prism-line-highlight.css'\n\nPrism.highlightAll();\n","(function (Prism) {\n\n\t/**\n\t * Returns the placeholder for the given language id and index.\n\t *\n\t * @param {string} language\n\t * @param {string|number} index\n\t * @returns {string}\n\t */\n\tfunction getPlaceholder(language, index) {\n\t\treturn '___' + language.toUpperCase() + index + '___';\n\t}\n\n\tObject.defineProperties(Prism.languages['markup-templating'] = {}, {\n\t\tbuildPlaceholders: {\n\t\t\t/**\n\t\t\t * Tokenize all inline templating expressions matching `placeholderPattern`.\n\t\t\t *\n\t\t\t * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n\t\t\t * `true` will be replaced.\n\t\t\t *\n\t\t\t * @param {object} env The environment of the `before-tokenize` hook.\n\t\t\t * @param {string} language The language id.\n\t\t\t * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n\t\t\t * @param {(match: string) => boolean} [replaceFilter]\n\t\t\t */\n\t\t\tvalue: function (env, language, placeholderPattern, replaceFilter) {\n\t\t\t\tif (env.language !== language) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar tokenStack = env.tokenStack = [];\n\n\t\t\t\tenv.code = env.code.replace(placeholderPattern, function (match) {\n\t\t\t\t\tif (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t\tvar i = tokenStack.length;\n\t\t\t\t\tvar placeholder;\n\n\t\t\t\t\t// Check for existing strings\n\t\t\t\t\twhile (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1)\n\t\t\t\t\t\t++i;\n\n\t\t\t\t\t// Create a sparse array\n\t\t\t\t\ttokenStack[i] = match;\n\n\t\t\t\t\treturn placeholder;\n\t\t\t\t});\n\n\t\t\t\t// Switch the grammar to markup\n\t\t\t\tenv.grammar = Prism.languages.markup;\n\t\t\t}\n\t\t},\n\t\ttokenizePlaceholders: {\n\t\t\t/**\n\t\t\t * Replace placeholders with proper tokens after tokenizing.\n\t\t\t *\n\t\t\t * @param {object} env The environment of the `after-tokenize` hook.\n\t\t\t * @param {string} language The language id.\n\t\t\t */\n\t\t\tvalue: function (env, language) {\n\t\t\t\tif (env.language !== language || !env.tokenStack) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Switch the grammar back\n\t\t\t\tenv.grammar = Prism.languages[language];\n\n\t\t\t\tvar j = 0;\n\t\t\t\tvar keys = Object.keys(env.tokenStack);\n\n\t\t\t\tfunction walkTokens(tokens) {\n\t\t\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\t// all placeholders are replaced already\n\t\t\t\t\t\tif (j >= keys.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar token = tokens[i];\n\t\t\t\t\t\tif (typeof token === 'string' || (token.content && typeof token.content === 'string')) {\n\t\t\t\t\t\t\tvar k = keys[j];\n\t\t\t\t\t\t\tvar t = env.tokenStack[k];\n\t\t\t\t\t\t\tvar s = typeof token === 'string' ? token : token.content;\n\t\t\t\t\t\t\tvar placeholder = getPlaceholder(language, k);\n\n\t\t\t\t\t\t\tvar index = s.indexOf(placeholder);\n\t\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\t\t++j;\n\n\t\t\t\t\t\t\t\tvar before = s.substring(0, index);\n\t\t\t\t\t\t\t\tvar middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n\t\t\t\t\t\t\t\tvar after = s.substring(index + placeholder.length);\n\n\t\t\t\t\t\t\t\tvar replacement = [];\n\t\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([before]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treplacement.push(middle);\n\t\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([after]));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (typeof token === 'string') {\n\t\t\t\t\t\t\t\t\ttokens.splice.apply(tokens, [i, 1].concat(replacement));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttoken.content = replacement;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (token.content /* && typeof token.content !== 'string' */) {\n\t\t\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tokens;\n\t\t\t\t}\n\n\t\t\t\twalkTokens(env.tokens);\n\t\t\t}\n\t\t}\n\t});\n\n}(Prism));\n","Prism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n","(function(){\n\nif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\treturn;\n}\n\nfunction $$(expr, con) {\n\treturn Array.prototype.slice.call((con || document).querySelectorAll(expr));\n}\n\nfunction hasClass(element, className) {\n  className = \" \" + className + \" \";\n  return (\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(className) > -1\n}\n\n// Some browsers round the line-height, others don't.\n// We need to test for it to position the elements properly.\nvar isLineHeightRounded = (function() {\n\tvar res;\n\treturn function() {\n\t\tif(typeof res === 'undefined') {\n\t\t\tvar d = document.createElement('div');\n\t\t\td.style.fontSize = '13px';\n\t\t\td.style.lineHeight = '1.5';\n\t\t\td.style.padding = 0;\n\t\t\td.style.border = 0;\n\t\t\td.innerHTML = '&nbsp;<br />&nbsp;';\n\t\t\tdocument.body.appendChild(d);\n\t\t\t// Browsers that round the line-height should have offsetHeight === 38\n\t\t\t// The others should have 39.\n\t\t\tres = d.offsetHeight === 38;\n\t\t\tdocument.body.removeChild(d);\n\t\t}\n\t\treturn res;\n\t}\n}());\n\nfunction highlightLines(pre, lines, classes) {\n\tlines = typeof lines === 'string' ? lines : pre.getAttribute('data-line');\n\t\n\tvar ranges = lines.replace(/\\s+/g, '').split(','),\n\t    offset = +pre.getAttribute('data-line-offset') || 0;\n\n\tvar parseMethod = isLineHeightRounded() ? parseInt : parseFloat;\n\tvar lineHeight = parseMethod(getComputedStyle(pre).lineHeight);\n\tvar hasLineNumbers = hasClass(pre, 'line-numbers');\n\n\tfor (var i=0, currentRange; currentRange = ranges[i++];) {\n\t\tvar range = currentRange.split('-');\n\n\t\tvar start = +range[0],\n\t\t    end = +range[1] || start;\n\n\t\tvar line = pre.querySelector('.line-highlight[data-range=\"' + currentRange + '\"]') || document.createElement('div');\n\n\t\tline.setAttribute('aria-hidden', 'true');\n\t\tline.setAttribute('data-range', currentRange);\n\t\tline.className = (classes || '') + ' line-highlight';\n\n\t\t//if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\n\t\tif(hasLineNumbers && Prism.plugins.lineNumbers) {\n\t\t\tvar startNode = Prism.plugins.lineNumbers.getLine(pre, start);\n\t\t\tvar endNode = Prism.plugins.lineNumbers.getLine(pre, end);\n\t\t\t\n\t\t\tif (startNode) {\n\t\t\t\tline.style.top = startNode.offsetTop + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (endNode) {\n\t\t\t\tline.style.height = (endNode.offsetTop - startNode.offsetTop) + endNode.offsetHeight + 'px';\n\t\t\t}\n\t\t} else {\n\t\t\tline.setAttribute('data-start', start);\n\n\t\t\tif(end > start) {\n\t\t\t\tline.setAttribute('data-end', end);\n\t\t\t}\n\t\t\t\n\t\t\tline.style.top = (start - offset - 1) * lineHeight + 'px';\n\n\t\t\tline.textContent = new Array(end - start + 2).join(' \\n');\n\t\t}\n\n\t\t//allow this to play nicely with the line-numbers plugin\n\t\tif(hasLineNumbers) {\n\t\t\t//need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\n\t\t\tpre.appendChild(line);\n\t\t} else {\n\t\t\t(pre.querySelector('code') || pre).appendChild(line);\n\t\t}\n\t}\n}\n\nfunction applyHash() {\n\tvar hash = location.hash.slice(1);\n\n\t// Remove pre-existing temporary lines\n\t$$('.temporary.line-highlight').forEach(function (line) {\n\t\tline.parentNode.removeChild(line);\n\t});\n\n\tvar range = (hash.match(/\\.([\\d,-]+)$/) || [,''])[1];\n\n\tif (!range || document.getElementById(hash)) {\n\t\treturn;\n\t}\n\n\tvar id = hash.slice(0, hash.lastIndexOf('.')),\n\t    pre = document.getElementById(id);\n\n\tif (!pre) {\n\t\treturn;\n\t}\n\n\tif (!pre.hasAttribute('data-line')) {\n\t\tpre.setAttribute('data-line', '');\n\t}\n\n\thighlightLines(pre, range, 'temporary ');\n\n\tdocument.querySelector('.temporary.line-highlight').scrollIntoView();\n}\n\nvar fakeTimer = 0; // Hack to limit the number of times applyHash() runs\n\nPrism.hooks.add('before-sanity-check', function(env) {\n\tvar pre = env.element.parentNode;\n\tvar lines = pre && pre.getAttribute('data-line');\n\n\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n\t\treturn;\n\t}\n\t\n\t/*\n\t* Cleanup for other plugins (e.g. autoloader).\n\t *\n\t * Sometimes <code> blocks are highlighted multiple times. It is necessary\n\t * to cleanup any left-over tags, because the whitespace inside of the <div>\n\t * tags change the content of the <code> tag.\n\t */\n\tvar num = 0;\n\t$$('.line-highlight', pre).forEach(function (line) {\n\t\tnum += line.textContent.length;\n\t\tline.parentNode.removeChild(line);\n\t});\n\t// Remove extra whitespace\n\tif (num && /^( \\n)+$/.test(env.code.slice(-num))) {\n\t\tenv.code = env.code.slice(0, -num);\n\t}\n});\n\nPrism.hooks.add('complete', function completeHook(env) {\n\tvar pre = env.element.parentNode;\n\tvar lines = pre && pre.getAttribute('data-line');\n\n\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n\t\treturn;\n\t}\n\n\tclearTimeout(fakeTimer);\n\n\tvar hasLineNumbers = Prism.plugins.lineNumbers;\n\tvar isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers;\n\n\tif (hasClass(pre, 'line-numbers') && hasLineNumbers && !isLineNumbersLoaded) {\n\t\tPrism.hooks.add('line-numbers', completeHook);\n\t} else {\n\t\thighlightLines(pre, lines);\n\t\tfakeTimer = setTimeout(applyHash, 1);\n\t}\n});\n\n\twindow.addEventListener('hashchange', applyHash);\n\twindow.addEventListener('resize', function () {\n\t\tvar preElements = document.querySelectorAll('pre[data-line]');\n\t\tArray.prototype.forEach.call(preElements, function (pre) {\n\t\t\thighlightLines(pre);\n\t\t});\n\t});\n\n})();","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n(function (Prism) {\n\tPrism.languages.php = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n\t\t'boolean': {\n\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\t\t'constant': [\n\t\t\t/\\b[A-Z_][A-Z0-9_]*\\b/,\n\t\t\t/\\b(?:null)\\b/i,\n\t\t],\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'string', {\n\t\t'shell-comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'comment', {\n\t\t'delimiter': {\n\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\talias: 'important'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'keyword', {\n\t\t'variable': /\\$+(?:\\w+\\b|(?={))/i,\n\t\t'package': {\n\t\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\\\/\n\t\t\t}\n\t\t}\n\t});\n\n\t// Must be defined after the function pattern\n\tPrism.languages.insertBefore('php', 'operator', {\n\t\t'property': {\n\t\t\tpattern: /(->)[\\w]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tvar string_interpolation = {\n\t\tpattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\trest: Prism.languages.php\n\t\t}\n\t};\n\n\tPrism.languages.insertBefore('php', 'string', {\n\t\t'nowdoc-string': {\n\t\t\tpattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'heredoc-string': {\n\t\t\tpattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t},\n\t\t'single-quoted-string': {\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'double-quoted-string': {\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t}\n\t});\n\t// The different types of PHP strings \"replace\" the C-like standard string\n\tdelete Prism.languages.php['string'];\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tif (!/<\\?/.test(env.code)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t});\n\n}(Prism));\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tvar insertHighlightedCode = function (highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': RegExp('url\\\\((?:' + string.source + '|.*?)\\\\)', 'i'),\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t\tif (Prism.plugins.toolbar) {\n\t\t\tPrism.plugins.toolbar.registerButton('download-file', function (env) {\n\t\t\t\tvar pre = env.element.parentNode;\n\t\t\t\tif (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar a = document.createElement('a');\n\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\ta.setAttribute('download', '');\n\t\t\t\ta.href = src;\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}